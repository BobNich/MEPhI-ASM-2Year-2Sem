Algorithm for lab3. b0.02

Here are prerequiremenets:
    1. Инициализировать word_pointer = NULL
    2. Инициализировать first_word_completed = FALSE
    3. Инициализировать r8 (first_word_length) = 0
    4. Инициализировать r9 (current_word_length) = 0
    5. Инициализировать r10 (счетчик пройденных букв в input_buffer) = 1

Алгоритм:
    0. Проверить, конец ли:
        Конец -> завершить работу алгоритма
        Не конец -> 1.

    1. Проверить, пробел ли:
        Если пробел -> 4.
        Если не пробел -> 1.1.

    1.1. Проверить, таб ли:
        Если таб -> 4.
        Если не таб -> 1.2.

    1.2. Проверить, '/n' ли:
        Если '/n' -> 4.
        Если не '/n' -> 1.3.

    1.3. Проверить, \0 ли:
        Если \0 -> 0.
        Если не \0 -> 2.

    2. Посчитать длину слова:
        Если word_pointer == NULL:
            Сохранить указатель на первую букву слова (word_pointer = POINTER)
        Если (first_word_completed == FALSE):
            first_word_length += 1
        current_word_length += 1 -> 4.

    4. Проверка текущей буквы и переход к следующей букве, если это возможно:
        r10+=1

        Текущая буква '/n':
            Если (word_pointer != NULL) -> 5.
            Если (first_word_completed == TRUE):
                Удалить последний пробел в output_buffer
            Добавить '\n' в output_buffer
            Проверить, конец ли буфера:
                Нет -> (перейти к следующей букве)
            -> 0.

        Конец ли буфера:
            Да:
                Если (last_word_undone == TRUE):
                    Да -> (offset = длину последнего слова (неоконченного)) -> 0.
                    Иначе -> 5. -> 0.
            Нет:
                Если (word_pointer != NULL) && (текущая буква = space/tab) -> 5.
                (перейти к следующей букве) -> 0.

    5. Записать слово в output_buffer:
        Если (first_word_completed == FALSE):
            first_word_completed = TRUE
        Если (current_word_length == first_word_length):
            Записать в output_buffer слово
            Добавить пробел в output_buffer
        word_pointer = NULL
        current_word_length = 0