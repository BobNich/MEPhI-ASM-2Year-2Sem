Algorithm for lab3. b0.01

" a ba	 b  sdflkjh 
sdf   sdfk  skt
dlld"


1) Let we read 10 symbols (It means, the max length of the word = 9)

Here is the first buffer we'll have:
" a ba	 b  "
Here we see that all words in this buffer are complete. (Due to space in the end of the buffer's string)

Here are prerequiremenets:
    1. Initialize first_word_complete flag as FALSE
    2. Initialize r8 (first_word_length) as 0
    3. Initialize r9 (current_word_length) as 0
    4. Initialize END_STRING flag as FALSE

2) Let read it from start:

///////////////////////////////////////////////
    1. Check if space:
    If space -> 4.
    If not space -> 1.1.

    1.1. Check if tab:
    If tab -> 4.
    If not tab -> 1.2.

    1.2. Check if '/n':
    If '/n' -> 4.
    If not '/n' -> 1.3.

    1.3. Check if \0:
    If \0 -> [End algorithm]
    If not \0 -> 2.
///////////////////////////////////////////////

    2. Check if first word:
    If first word -> 2.1.
    If not first word -> 2.2.

///////////////////////////////////////////////
    2.1. Count first word length:
    Save first word first character position in buffer string
    Add to first_word_length variable 1. -> 
    -> 3.

    2.2. Count current word length:
    Save current word first character position in buffer string
    Add to current_word-length variable 1. ->
    -> 3.
///////////////////////////////////////////////

///////////////////////////////////////////////
    3. Next character after word handling:
    Check if string processing done (Cycle counter = Current buffer length):
    If done -> 5.
    If not done -> 1.

    4. Next character after space/tab/'/n' handling:
    If '/n' -> (Add \n to output_buffer)
    Else -> 

    Go -> 3.

///////////////////////////////////////////////


    5. Done (End of the string processing):
    TODO()

